//check whether the given number is circular prime or not ranges upto 1000
//sample input-19--->sample output-FALSE, sample input-101--->sample output-FALSE, sample input-197--->sample output-TRUE
code:
#include <stdio.h>
int checkcircularprime(int a){
    int base,c;
    if(a>=100 && a<1000) {base=100; c=3;}
    else if(a<100){ base=10; c=2;}
    int arr[c];
    for(int i=0;i<c;i++){
        arr[i]=a%10;
        a=a/10;
    }
    int k=c;
    while(k!=0){
        int sum=0,b1=base,b2=base,rev=0;
        for(int i=0;i<c;i++){
            sum+=(arr[i]*b1);
            b1=b1/10;
        }
        for(int i=c-1;i>=0;i--){
            rev+=(arr[i]*b2);
            b2=b2/10;
        }
       int flag=0;
       for(int i=0;i<c;i++){ if(arr[i]==0) flag+=1;}
       
        if(flag==1)  {
       for(int i=2;i<sum;i++) {if(sum%i==0 || rev%i==0) return 0;}}
       else {
         for(int i=2;i<sum;i++) {if(sum%i==0 && rev%i==0) return 0;}}  
        int temp=arr[0];
        for(int i=0;i<c-1;i++){
            arr[i]=arr[i+1];
        }
        arr[c-2]=temp;
        k--;
    }
    return 1;
    
}                                            //end of circularprime1
int rev(int a){
    int k=a,base=1,j=0;
    while(a!=0){
        a=a/10;
        base=base*10;
    }
    base/=10;
    while(k!=0){
        j+=(k%10)*base;
        k=k/10;
        base=base/10;
    }
    return j;
}                                                  //end of rev
int checkprime1(int a){
    int k=rev(a),flag=0;
    if(a>10 &&a<100){
    for(int i=2;i<k;i++){
        if(a%i==0 || k%i==0) return 0;
    }
    }
    else{
        for(int i=2;i<a;i++){
        if(a%i==0) {flag=1; break;}
    }
    }
    if(flag==1) return 0;
    return 1;
}                                               //end of checkprime

int main()
{
    int a;
    scanf("%d",&a);
    if(checkprime1(a)){
    if(a<10) {printf("TRUE"); return 0;}
    if(checkcircularprime(a)) printf("True");
    else printf("False");}
    else printf("False");
}
